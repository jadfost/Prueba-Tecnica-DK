--- Se crea la tabla de allevents
CREATE TABLE allevents (
    eventid INT,
    venueid INT,
    categoryid INT,
    dateid INT,
    eventname VARCHAR(255),
    eventdate TIMESTAMP
);

--- Se crea la tabla de allusers
CREATE TABLE allusers (
    userid INT,
    username VARCHAR(50),
    firstname VARCHAR(50),
    lastname VARCHAR(50),
    city VARCHAR(50),
    state VARCHAR(50),
    email VARCHAR(255),
    phone VARCHAR(20),
    jazz BOOLEAN,
    opera BOOLEAN,
    rock BOOLEAN,
    bachata BOOLEAN,
    salsa BOOLEAN,
    cumbia BOOLEAN,
    regge BOOLEAN,
    trap BOOLEAN,
    ballenato BOOLEAN,
    lobi BOOLEAN
);

--- Se crea la tabla de category
CREATE TABLE category (
    categoryid INT,
    categorygroup VARCHAR(255),
    categoryname VARCHAR(255),
    categorydesc VARCHAR(255)
);

--- Se crea la tabla de date2008
CREATE TABLE date2008 (
    dateid INT,
    datevalue DATE,
    dayname VARCHAR(255),
    dayofweek INT,
    monthabbr VARCHAR(255),
    monthnum INT,
    year INT,
    isweekend BOOLEAN
);

--- Se crea la tabla de listings
CREATE TABLE listings (
    listingid INT,
    eventid INT,
    sellerid INT,
    listingdateid INT,
    numtickets INT,
    priceperticket NUMERIC(10,2),
    totalprice NUMERIC(10,2),
    createddate TIMESTAMP
);

--- Se crea la tabla de sales_tab
CREATE TABLE sales_tab (
    number INT,
    saleid INT,
    eventid INT,
    userid INT,
    listingid INT,
    dateid INT,
    quantity INT,
    priceperticket NUMERIC(10,2),
    totalprice NUMERIC(10,2),
    saledate TIMESTAMP
);

--- Se crea la tabla de venue
CREATE TABLE venue (
    venueid INT,
    venuename VARCHAR(255),
    venuecity VARCHAR(255),
    venuestate VARCHAR(255),
    venueactive INT
);

--------------------- Resultado de Consultas SQL -----------------------
-- a. ¿Cuántos Usuarios gustan del Jazz?
SELECT COUNT(*) AS usuarios_gustan_jazz
FROM allusers
WHERE jazz = TRUE;

-- b. ¿Cuántos Usuarios gustan de la ópera y del rock al mismo tiempo?
SELECT COUNT(*) AS usuarios_opera_y_rock
FROM allusers
WHERE opera = TRUE AND rock = TRUE;

-- c. ¿Cuál es el promedio, moda y mediana del total de Ventas?
SELECT
  AVG(totalprice) AS promedio_ventas,
  MAX(totalprice) AS moda_ventas,
  PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY totalprice) AS mediana_ventas
FROM sales_tab;

-- d. ¿Cuál es el promedio de ventas de usuarios que gustan del rock, pero NO del Jazz?
SELECT AVG(s.totalprice) AS promedio_ventas_rock_sin_jazz
FROM sales_tab s
JOIN allusers u ON s.userid = u.userid
WHERE u.rock = TRUE AND u.jazz = FALSE;

----------------------------------------------------------------------

------------- Nueva tabla de informacion adjunta ----------------
CREATE TABLE merged_data AS
SELECT
  u.username,
  u.lastname,
  u.email,
  e.eventname,
  v.venuename,
  to_char(e.eventdate, 'YYYY-MM-DD') AS eventdate,
  s.quantity,
  s.totalprice
FROM
  allusers u
JOIN sales_tab s ON u.userid = s.userid
JOIN allevents e ON s.eventid = e.eventid
JOIN venue v ON e.venueid = v.venueid;

----- Exportar tabla a un archivo CSV ---------
UNLOAD ('SELECT * FROM merged_data')
TO 's3://modelaciondk/tickitdb/merge_data.csv'
CREDENTIALS 'aws_access_key_id=AKIAVISDIRYZU7LYYR45;aws_secret_access_key=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'
DELIMITER ','
ALLOWOVERWRITE
PARALLEL OFF;